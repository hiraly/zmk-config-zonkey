#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define JIS 1
#define BT 4
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        a+s-to-tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        df-to-click {
            bindings = <&mkp LCLK>;
            key-positions = <13 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <10>;
        };

        toJIS: toJIS {
            compatible = "zmk,behavior-hold-tap";
            label = "toJIS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&tog>, <&kp>;
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp AMPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp APOS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp RPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moMINUS: moMINUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp EQUAL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moCARET: moCARET {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moINT3: moINT3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp INT3>, <&kp PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moAT: moAT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp GRAVE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moLBKT: moLBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LS(LBRC)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moRBKT: moRBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp LS(RBRC)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moSEMI: moSEMI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moCOLON: moCOLON {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moBSLH: moBSLH {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp UNDER>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E             &kp R                  &kp T                                           &kp Y                &kp U                  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D             &kp F                  &kp G          &mo2                  &mkp LCLK  &kp H                &kp J                  &kp K      &kp L    &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X             &kp C                  &kp V          &kp B                 &mkp RCLK  &kp N                &kp M                  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL       &kp LEFT_ALT  &kp LEFT_COMMAND  &mt LEFT_SHIFT ESCAPE  &kp BACKSPACE  &lt 1 LEFT_COMMAND               &lt 2 RIGHT_COMMAND  &mt RIGHT_SHIFT SPACE                                 &trans
            >;

            sensor-bindings =
                <&scroll_down_up>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN        &kp HASH   &kp DOLLAR      &kp PERCENT                         &kp CARET         &kp AMPERSAND      &kp ASTERISK          &kp BACKSLASH          &kp PLUS
&kp SQT          &kp DOUBLE_QUOTES  &kp MINUS  &kp UNDERSCORE  &kp EQUAL    &trans      &mkp RCLK  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans           &kp GRAVE          &kp TILDE  &trans          &trans       &kp PIPE    &trans     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp COLON             &kp SEMICOLON          &trans
&trans           &trans             &trans     &trans          &trans       &trans                 &trans            &mkp LCLK                                                                 &kp CAPS
            >;

            sensor-bindings = <&scroll_down_up>;
        };

        layer_2 {
            bindings = <
&kp N1   &kp NUMBER_2  &kp N3  &kp N4  &kp N5                     &kp NUMBER_6    &kp N7          &kp N8        &kp N9           &kp N0
&kp TAB  &trans        &trans  &kp F2  &kp F12  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans   &trans        &trans  &trans  &trans   &trans    &trans  &trans          &trans          &trans        &trans           &trans
&trans   &trans        &trans  &trans  &trans   &trans            &trans          &trans                                                 &trans
            >;

            sensor-bindings = <&scroll_down_up>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans     &trans     &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &mkp RCLK  &mkp LCLK  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans     &trans     &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans     &trans     &trans  &trans            &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_down_up>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mouse {
            if-layers = <3>;
            then-layer = <3>;
        };
    };
};
